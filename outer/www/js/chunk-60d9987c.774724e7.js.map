{"version":3,"sources":["webpack:///./src/views/transfer/Transfer.vue?2cc3","webpack:///./src/views/transfer/Transfer.vue?7819","webpack:///./src/views/transfer/Transfer.vue?ae08","webpack:///./node_modules/core-js/modules/es6.array.find-index.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./src/views/transfer/Transfer.vue?694f","webpack:///./node_modules/core-js/modules/_set-species.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///src/views/transfer/Transfer.vue","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/nuls-sdk-js/lib/utils/utils.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","expression","staticClass","attrs","element-loading-spinner","_v","_s","$t","ref","model","transferForm","status-icon","rules","transferRules","label","autocomplete","disabled","callback","$$v","$set","slot","on","click","showBook","prop","trim","change","changeType","_l","item","index","key","symbol","assetsInfo","balance","allAvailable","type","inactive-text","width","seniorValue","rows","maxlength","show-word-limit","placement","fee","defaultInfo","defaultAsset","$event","submitTransferForm","title","visible","bookDialog","close-on-click-modal","close-on-press-escape","update:visible","data","bookData","property","align","min-width","scopedSlots","_u","fn","scope","underline","selectBook","row","transferDiolog","show-close","fromAddress","aliasToAddress","toAddress","amount","remarks","confirmTransfer","passwordSubmit","passSubmit","staticRenderFns","transfer_Transfervue_type_script_lang_js_","Transfervue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","$export","__webpack_require__","$find","KEY","forced","Array","P","F","findIndex","callbackfn","arguments","length","undefined","global","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","tiRE","piRE","fiU","constructor","source","call","proxy","configurable","get","set","it","keys","i","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Transfer_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Transfer_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default","n","DESCRIPTORS","SPECIES","module","exports","C","FProto","Function","nameRE","NAME","match","e","_this","validateToAddress","_ref","_blockchain_Tdatt_datt_datt_module_web_wallet_wallet_ui_node_modules_babel_runtime_corejs2_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_10__","regeneratorRuntime","mark","_callee","rule","aliasRes","verifyToAddress","wrap","_context","prev","next","toAddressInfo","nuls_sdk_js__WEBPACK_IMPORTED_MODULE_11___default","a","verifyAddress","sent","transferType","Error","getAccountByAlias","success","$refs","validateField","stop","_x","_x2","_x3","apply","validateAmount","_ref2","_callee2","patrn","fromAddressInfo","contractInfo","isCrossChain","_context2","decimals","available","Number","_api_util__WEBPACK_IMPORTED_MODULE_16__","exec","chainId","contractInfoByContractAddress","contractAddress","nrc20","crossAsset","$message","message","duration","abrupt","methods","parameterValidation","_x4","_x5","_x6","validateGas","validatePrice","addressInfo","assetsList","balanceInfo","assetType","gas","price","validator","trigger","contractCallData","gasInfo","number","oldNumber","contractFee","transferLoading","created","address","JSON","parse","sessionStorage","getItem","mounted","_this2","getCapitalListByAddress","setInterval","watch","val","old","components","Password","_components_PasswordBar__WEBPACK_IMPORTED_MODULE_17__","_getCapitalListByAddress","_callee3","basicAssets","contractAssets","newContractAssets","crossAssets","newInfo","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_this3","_context3","_config_js__WEBPACK_IMPORTED_MODULE_15__","$post","then","response","hasOwnProperty","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","result","Symbol","iterator","done","push","assetId","err","return","catch","error","console","log","assetsListLoading","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","list","itme","tokenSymbol","status","lockedBalance","filter","obj","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","concat","_blockchain_Tdatt_datt_datt_module_web_wallet_wallet_ui_node_modules_babel_runtime_corejs2_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","$route","query","accountType","t0","finish","_x7","defaultAddressInfo","contactList","_getAccountByAlias","_callee4","alias","resData","_context4","_x8","_verifyToAddress","_callee5","_context5","_changeType","_callee6","_context6","_x9","transferPayable","transferTransfer","transferCrossChain","gasLimit","nuls_sdk_js_lib_api_sdk__WEBPACK_IMPORTED_MODULE_12___default","CONTRACT_MAX_GASLIMIT","methodName","methodDesc","args","toString","validateContractCall","newValue","formName","_this4","validate","valid","_confirmTransfer","_callee7","txHexKey","signDataKey","assembleHex","commitDatas","_context7","aesPri","password","showPassword","getNulsBalance","transferAssemble","_api_requestData__WEBPACK_IMPORTED_MODULE_14__","stringify","showScan","txInfo","_transferAssemble","_callee8","transferInfo","inOrOutputs","tAssemble","_context8","assetsChainId","assetsId","transactionAssemble","inputs","outputs","_passSubmit","_callee9","passwordInfo","txHex","crossTxHex","broadcastResult","_context9","crossTxhexs","pri","pub","toUrl","transactionSerialize","_x10","_getNulsBalance2","_callee10","assetChainId","_context10","_x11","_x12","_x13","_contractInfoByContractAddress","_callee11","_context11","_x14","_validateContractCall","_callee12","sender","_this5","_context12","imputedContractCallGas","_x15","_x16","_x17","_x18","_x19","_x20","_x21","_x22","_imputedContractCallGas","_callee14","_this6","_context14","_ref3","_callee13","contractConstructorArgsTypes","newArgs","_context13","getContractMethodArgsTypes","nuls_sdk_js_lib_utils_utils__WEBPACK_IMPORTED_MODULE_13___default","twoDimensionalArray","_x29","_x23","_x24","_x25","_x26","_x27","_x28","_getContractMethodArgsTypes","_callee15","_context15","_x30","_x31","_crossTxhexs","_callee16","mainNetBalanceInfo","localBalanceInfo","newAmount","_newAmount","ctxSign","mainCtxSign","txs","Serializers","bw","mainCtx","pubHex","newFee","mainNetInputs","_this7","_context16","lockTime","locked","nonce","remark","CrossChainTransaction","Buffer","from","time","setCoinData","transactionSignature","writeBytesWithLength","signatures","getBufWriter","toBuffer","txSerialize","_x32","_x33","_x34","_x35","$router","isObject","cof","MATCH","valueOfstring","isBlank","str","stringToByte","bytes","len","c","charCodeAt","types","two","arg","argStr","indexOf","arrayArg","eval","isArray","k","_len","_result","_k"],"mappings":"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","file":"js/chunk-60d9987c.774724e7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.transferLoading),expression:\"transferLoading\"}],staticClass:\"bg-gray transfer\",attrs:{\"element-loading-spinner\":\"el-icon-loading\"}},[_c('div',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$t('nav.transfer')))]),_c('div',{staticClass:\"w1200 transfer_info\"},[_c('el-form',{ref:\"transferForm\",staticClass:\" w630 transfer_form\",attrs:{\"model\":_vm.transferForm,\"status-icon\":\"\",\"rules\":_vm.transferRules}},[_c('el-form-item',{attrs:{\"label\":_vm.$t('transfer.transfer0')}},[_c('el-input',{attrs:{\"autocomplete\":\"off\",\"disabled\":\"\"},model:{value:(_vm.transferForm.fromAddress),callback:function ($$v) {_vm.$set(_vm.transferForm, \"fromAddress\", $$v)},expression:\"transferForm.fromAddress\"}})],1),_c('div',{staticClass:\"fr book\"},[_c('i',{staticClass:\"iconfont iconlianxiren click font16\",attrs:{\"slot\":\"suffix\"},on:{\"click\":_vm.showBook},slot:\"suffix\"})]),_c('el-form-item',{attrs:{\"label\":_vm.$t('transfer.transfer1'),\"prop\":\"toAddress\"}},[_c('el-input',{attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.transferForm.toAddress),callback:function ($$v) {_vm.$set(_vm.transferForm, \"toAddress\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"transferForm.toAddress\"}})],1),_c('el-form-item',{attrs:{\"label\":_vm.$t('transfer.transfer2'),\"prop\":\"assetType\"}},[_c('el-select',{staticClass:\"asset_type\",on:{\"change\":_vm.changeType},model:{value:(_vm.transferForm.assetType),callback:function ($$v) {_vm.$set(_vm.transferForm, \"assetType\", $$v)},expression:\"transferForm.assetType\"}},_vm._l((_vm.assetsList),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item.symbol,\"value\":item}})}),1)],1),_c('div',{staticClass:\"font12 fr balance\"},[_vm._v(_vm._s(_vm.$t('consensus.consensus2'))+\"：\"+_vm._s(_vm.assetsInfo.balance)+\"\\n        \"),_c('span',[_vm._v(_vm._s(_vm.assetsInfo.symbol))])]),_c('el-form-item',{attrs:{\"label\":_vm.$t('transfer.transfer3'),\"prop\":\"amount\"}},[_c('el-input',{attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.transferForm.amount),callback:function ($$v) {_vm.$set(_vm.transferForm, \"amount\", $$v)},expression:\"transferForm.amount\"}})],1),_c('div',{staticClass:\"fr click all\",on:{\"click\":_vm.allAvailable}},[_vm._v(_vm._s(_vm.$t('transfer.transfer24')))]),_c('el-switch',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.assetsInfo.type !==1),expression:\"assetsInfo.type !==1\"}],staticClass:\"senior_value fr\",attrs:{\"inactive-text\":_vm.$t('call.call3'),\"width\":\"35\"},model:{value:(_vm.seniorValue),callback:function ($$v) {_vm.seniorValue=$$v},expression:\"seniorValue\"}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.seniorValue),expression:\"seniorValue\"}],staticClass:\"senior_list cb\"},[_c('el-form-item',{attrs:{\"label\":\"Gas Limit\",\"prop\":\"gas\"}},[_c('el-input',{attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.transferForm.gas),callback:function ($$v) {_vm.$set(_vm.transferForm, \"gas\", $$v)},expression:\"transferForm.gas\"}})],1),_c('el-form-item',{attrs:{\"label\":\"Price\",\"prop\":\"price\"}},[_c('el-input',{attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.transferForm.price),callback:function ($$v) {_vm.$set(_vm.transferForm, \"price\", $$v)},expression:\"transferForm.price\"}})],1)],1),_c('el-form-item',{staticClass:\"remarks\",attrs:{\"label\":_vm.$t('transfer.transfer4')}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":2,\"maxlength\":\"200\",\"show-word-limit\":\"\"},model:{value:(_vm.transferForm.remarks),callback:function ($$v) {_vm.$set(_vm.transferForm, \"remarks\", $$v)},expression:\"transferForm.remarks\"}})],1),_c('div',{staticClass:\"font14 mb_20\"},[_c('el-tooltip',{attrs:{\"placement\":\"top\"}},[_c('div',{attrs:{\"slot\":\"content\"},slot:\"content\"},[_vm._v(_vm._s(_vm.$t('transfer.transfer5')))]),_c('i',{staticClass:\"el-icon-warning\"})]),_vm._v(\"\\n        \"+_vm._s(_vm.$t('public.fee'))+\": \"+_vm._s(_vm.transferForm.fee)+\"\\n        \"),_c('span',{staticClass:\"fCN\"},[_vm._v(_vm._s(_vm.defaultInfo.defaultAsset.symbol))])],1),_c('el-form-item',{staticClass:\"tc\"},[_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":function($event){return _vm.submitTransferForm('transferForm')}}},[_vm._v(_vm._s(_vm.$t('public.next')))])],1)],1)],1),_c('el-dialog',{staticClass:\"book-dialog\",attrs:{\"title\":_vm.$t('public.bookList'),\"width\":\"50rem\",\"visible\":_vm.bookDialog,\"close-on-click-modal\":false,\"close-on-press-escape\":false},on:{\"update:visible\":function($event){_vm.bookDialog=$event}}},[_c('el-table',{attrs:{\"data\":_vm.bookData}},[_c('el-table-column',{attrs:{\"property\":\"name\",\"label\":_vm.$t('transfer.transfer4'),\"width\":\"100\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"property\":\"address\",\"label\":_vm.$t('tab.tab11'),\"min-width\":\"300\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"property\":\"alias\",\"label\":_vm.$t('address.address3'),\"width\":\"100\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"label\":\"\",\"width\":\"100\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-link',{staticClass:\"click td\",attrs:{\"underline\":false},on:{\"click\":function($event){return _vm.selectBook(scope.row)}}},[_vm._v(_vm._s(_vm.$t('public.choice'))+\"\\n          \")])]}}])})],1)],1),_c('el-dialog',{staticClass:\"confirm-dialog\",attrs:{\"title\":_vm.$t('transfer.transfer6'),\"width\":\"46rem\",\"visible\":_vm.transferDiolog,\"show-close\":false,\"close-on-click-modal\":false,\"close-on-press-escape\":false},on:{\"update:visible\":function($event){_vm.transferDiolog=$event}}},[_c('div',{staticClass:\"bg-white\"},[_c('div',{staticClass:\"div-data\"},[_c('p',[_vm._v(_vm._s(_vm.$t('transfer.transfer0'))+\" \")]),_c('label',[_vm._v(_vm._s(_vm.transferForm.fromAddress))])]),_c('div',{staticClass:\"div-data\"},[_c('p',[_vm._v(_vm._s(_vm.$t('transfer.transfer1'))+\" \")]),(_vm.aliasToAddress)?_c('label',[_vm._v(_vm._s(_vm.aliasToAddress)+\"(\"+_vm._s(_vm.transferForm.toAddress)+\")\")]):_c('label',[_vm._v(_vm._s(_vm.transferForm.toAddress))])]),_c('div',{staticClass:\"div-data\"},[_c('p',[_vm._v(_vm._s(_vm.$t('public.fee'))+\" \")]),_c('label',[_vm._v(_vm._s(_vm.transferForm.fee)+\" \"),_c('span',{staticClass:\"fCN\"},[_vm._v(_vm._s(_vm.defaultInfo.defaultAsset.symbol))])])]),_c('div',{staticClass:\"div-data cb\"},[_c('p',[_vm._v(_vm._s(_vm.$t('tab.tab6'))+\" \")]),_c('label',{staticClass:\"yellow\"},[_vm._v(_vm._s(_vm.transferForm.amount)+\" \"),_c('span',{staticClass:\"fCN\"},[_vm._v(_vm._s(_vm.assetsInfo.symbol))])])]),_c('div',{staticClass:\"div-data remark\"},[_c('p',[_vm._v(_vm._s(_vm.$t('transfer.transfer4'))+\" \")]),_c('label',{staticClass:\"scroll\"},[_vm._v(_vm._s(_vm.transferForm.remarks))])])]),_c('div',{staticClass:\"dialog-footer cb\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.transferDiolog = false}}},[_vm._v(_vm._s(_vm.$t('transfer.transfer7')))]),_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.confirmTransfer}},[_vm._v(_vm._s(_vm.$t('transfer.transfer8')))])],1)]),_c('Password',{ref:\"password\",on:{\"passwordSubmit\":_vm.passSubmit}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Transfer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Transfer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Transfer.vue?vue&type=template&id=4ea58b4e&\"\nimport script from \"./Transfer.vue?vue&type=script&lang=js&\"\nexport * from \"./Transfer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Transfer.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Transfer.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Transfer.vue?vue&type=style&index=0&lang=less&\"","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","<template>\n  <div class=\"bg-gray transfer\" v-loading=\"transferLoading\" element-loading-spinner=\"el-icon-loading\">\n    <div class=\"title\">{{$t('nav.transfer')}}</div>\n    <div class=\"w1200 transfer_info\">\n      <el-form :model=\"transferForm\" status-icon :rules=\"transferRules\" ref=\"transferForm\" class=\" w630 transfer_form\">\n        <el-form-item :label=\"$t('transfer.transfer0')\">\n          <el-input v-model=\"transferForm.fromAddress\" autocomplete=\"off\" disabled>\n          </el-input>\n        </el-form-item>\n        <div class=\"fr book\"><i class=\"iconfont iconlianxiren click font16\" slot=\"suffix\" @click=\"showBook\"></i></div>\n        <el-form-item :label=\"$t('transfer.transfer1')\" prop=\"toAddress\">\n          <el-input v-model.trim=\"transferForm.toAddress\" autocomplete=\"off\">\n          </el-input>\n        </el-form-item>\n        <!--<div class=\"cb yellow font12\" style=\"margin: -15px 0 10px 0\"\n             v-if=\"toAddressInfo.transferType===5 || toAddressInfo.transferType===6\">\n          Tips：该笔转账为跨链交易，到账时间根据两边的区块确定时间来确定\n        </div>-->\n        <el-form-item :label=\"$t('transfer.transfer2')\" prop=\"assetType\">\n          <el-select v-model=\"transferForm.assetType\" class=\"asset_type\" @change=\"changeType\">\n            <el-option v-for=\"(item,index) in assetsList\"\n                       :key=\"index\"\n                       :label=\"item.symbol\"\n                       :value=\"item\">\n              <!--:disabled=\"toAddressInfo.transferType ===5 && item.type === 2\">-->\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <div class=\"font12 fr balance\">{{$t('consensus.consensus2')}}：{{assetsInfo.balance}}\n          <span>{{assetsInfo.symbol}}</span></div>\n        <el-form-item :label=\"$t('transfer.transfer3')\" prop=\"amount\">\n          <el-input v-model=\"transferForm.amount\" autocomplete=\"off\">\n          </el-input>\n        </el-form-item>\n        <div class=\"fr click all\" @click=\"allAvailable\">{{$t('transfer.transfer24')}}</div>\n        <el-switch v-show=\"assetsInfo.type !==1\" v-model=\"seniorValue\" :inactive-text=\"$t('call.call3')\" width=\"35\"\n                   class=\"senior_value fr\">\n        </el-switch>\n        <div v-show=\"seniorValue\" class=\"senior_list cb\">\n          <el-form-item label=\"Gas Limit\" prop=\"gas\">\n            <el-input v-model=\"transferForm.gas\" autocomplete=\"off\">\n            </el-input>\n          </el-form-item>\n          <el-form-item label=\"Price\" prop=\"price\">\n            <el-input v-model=\"transferForm.price\" autocomplete=\"off\">\n            </el-input>\n          </el-form-item>\n        </div>\n        <el-form-item :label=\"$t('transfer.transfer4')\" class=\"remarks\">\n          <el-input type=\"textarea\" :rows=\"2\" v-model=\"transferForm.remarks\" maxlength=\"200\" show-word-limit>\n          </el-input>\n        </el-form-item>\n        <div class=\"font14 mb_20\">\n          <el-tooltip placement=\"top\">\n            <div slot=\"content\">{{$t('transfer.transfer5')}}</div>\n            <i class=\"el-icon-warning\"></i>\n          </el-tooltip>\n          {{$t('public.fee')}}: {{transferForm.fee}}\n          <span class=\"fCN\">{{defaultInfo.defaultAsset.symbol}}</span>\n        </div>\n        <el-form-item class=\"tc\">\n          <el-button type=\"success\" @click=\"submitTransferForm('transferForm')\">{{$t('public.next')}}</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <el-dialog :title=\"$t('public.bookList')\" width=\"50rem\" class=\"book-dialog\"\n               :visible.sync=\"bookDialog\"\n               :close-on-click-modal=\"false\"\n               :close-on-press-escape=\"false\">\n      <el-table :data=\"bookData\">\n        <el-table-column property=\"name\" :label=\"$t('transfer.transfer4')\" width=\"100\" align=\"center\">\n        </el-table-column>\n        <el-table-column property=\"address\" :label=\"$t('tab.tab11')\" min-width=\"300\" align=\"center\">\n        </el-table-column>\n        <el-table-column property=\"alias\" :label=\"$t('address.address3')\" width=\"100\" align=\"center\">\n        </el-table-column>\n        <el-table-column label=\"\" width=\"100\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-link :underline=\"false\" @click=\"selectBook(scope.row)\" class=\"click td\">{{$t('public.choice')}}\n            </el-link>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-dialog>\n\n    <el-dialog :title=\"$t('transfer.transfer6')\" width=\"46rem\" class=\"confirm-dialog\"\n               :visible.sync=\"transferDiolog\"\n               :show-close=\"false\"\n               :close-on-click-modal=\"false\"\n               :close-on-press-escape=\"false\">\n      <div class=\"bg-white\">\n        <div class=\"div-data\">\n          <p>{{$t('transfer.transfer0')}}&nbsp;</p>\n          <label>{{transferForm.fromAddress}}</label>\n        </div>\n        <div class=\"div-data\">\n          <p>{{$t('transfer.transfer1')}}&nbsp;</p>\n          <label v-if=\"aliasToAddress\">{{aliasToAddress}}({{transferForm.toAddress}})</label>\n          <label v-else>{{transferForm.toAddress}}</label>\n        </div>\n        <div class=\"div-data\">\n          <p>{{$t('public.fee')}}&nbsp;</p>\n          <label>{{transferForm.fee}} <span class=\"fCN\">{{defaultInfo.defaultAsset.symbol}}</span></label>\n        </div>\n        <div class=\"div-data cb\">\n          <p>{{$t('tab.tab6')}}&nbsp;</p>\n          <label class=\"yellow\">{{transferForm.amount}} <span class=\"fCN\">{{assetsInfo.symbol}}</span></label>\n        </div>\n        <div class=\"div-data remark\">\n          <p>{{$t('transfer.transfer4')}}&nbsp;</p>\n          <label class=\"scroll\">{{transferForm.remarks}}</label>\n        </div>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer cb\">\n        <el-button @click=\"transferDiolog = false\">{{$t('transfer.transfer7')}}</el-button>\n        <el-button type=\"success\" @click=\"confirmTransfer\">{{$t('transfer.transfer8')}}</el-button>\n      </div>\n    </el-dialog>\n\n    <Password ref=\"password\" @passwordSubmit=\"passSubmit\">\n    </Password>\n  </div>\n</template>\n\n<script>\n  import nuls from 'nuls-sdk-js'\n  import sdk from 'nuls-sdk-js/lib/api/sdk'\n  import utils from 'nuls-sdk-js/lib/utils/utils'\n  import {\n    isMainNet,\n    countCtxFee,\n    getNulsBalance,\n    inputsOrOutputs,\n    validateAndBroadcast,\n    commitData\n  } from '@/api/requestData'\n  import {MAIN_INFO} from '@/config.js'\n  import {\n    Times,\n    Plus,\n    Division,\n    Minus,\n    timesDecimals,\n    timesDecimals0,\n    timesDecimalsBig,\n    addressInfo,\n    passwordVerification,\n    htmlEncode,\n    getRamNumber,\n    divisionDecimals\n  } from '@/api/util'\n  import Password from '@/components/PasswordBar'\n\n  export default {\n\n    data() {\n      let validateToAddress = async (rule, value, callback) => {\n        //根据长度验证地址或者别名验证\n        let aliasRes = {};\n        if (value.length > 30) {\n          this.toAddressInfo = nuls.verifyAddress(value);\n          if (this.toAddressInfo.type === 1) { //主链地址\n            let verifyToAddress = await this.verifyToAddress();\n            //console.log(verifyToAddress);\n            if (!verifyToAddress) {\n              this.toAddressInfo.transferType = 0;\n              callback(new Error(verifyToAddress.data))\n            }\n          }\n        } else {\n          aliasRes = await this.getAccountByAlias(value);\n        }\n        //console.log(value);\n        if (!value) {\n          this.toAddressInfo.transferType = 0;\n          //console.log(this.toAddressInfo.transferType);\n          callback(new Error(this.$t('transfer.transfer9')))\n        } else if (value.length < 20 && !aliasRes.success) {\n          this.toAddressInfo.transferType = 0;\n          callback(new Error(this.$t('transfer.transfer23')))\n        } else {\n          if (this.transferForm.amount !== '') {\n            this.$refs.transferForm.validateField('amount');\n          }\n          callback()\n        }\n      };\n      let validateAmount = async (rule, value, callback) => {\n        let patrn = new RegExp(\"^([1-9][\\\\d]{0,20}|0)(\\\\.[\\\\d]{1,\" + this.assetsInfo.decimals + \"})?$\");\n        this.available = Number(this.assetsInfo.balance);\n        if (this.assetsInfo.type === 1 && this.assetsInfo.symbol === 'NULS') {\n          this.available = Number(Minus(this.assetsInfo.balance, this.transferForm.fee))\n        }\n        if (value === '') {\n          callback(new Error(this.$t('transfer.transfer11')))\n        } else if (!patrn.exec(value)) {\n          callback(new Error(this.$t('transfer.transfer12') + \": \" + this.assetsInfo.decimals))\n        } else if (value < 0.001 && this.assetsInfo.symbol === 'NULS') {\n          callback(new Error(this.$t('transfer.transfer13')))\n        } else if (value > this.available) {\n          callback(new Error(this.$t('transfer.transfer131') + \": \" + this.available))\n        } else {\n          if (this.transferForm.toAddress) {\n            let fromAddressInfo = nuls.verifyAddress(this.transferForm.fromAddress);\n            let toAddressInfo = nuls.verifyAddress(this.transferForm.toAddress);\n            if (fromAddressInfo.chainId !== toAddressInfo.chainId && this.assetsInfo.type === 2) {\n              //console.log(this.assetsInfo);\n              let contractInfo = await this.contractInfoByContractAddress(this.assetsInfo.contractAddress);\n              //console.log(contractInfo);\n              if (!contractInfo.nrc20 || !contractInfo.crossAsset) {\n                this.$message({message: this.$t('tips.tips22'), type: 'warning', duration: 3000});\n                this.transferForm.amount = '';\n                return;\n              }\n\n              let isCrossChain = contractInfo.methods.findIndex((value) => value.name === 'transferCrossChain');\n              //console.log(isCrossChain);\n              if (isCrossChain === -1) {\n                this.$message({message: this.$t('tips.tips23'), type: 'error', duration: 3000});\n                this.transferForm.amount = '';\n                return;\n              }\n            }\n            this.parameterValidation();\n            callback()\n          } else {\n            this.$refs.transferForm.validateField('toAddress');\n          }\n        }\n      };\n      let validateGas = (rule, value, callback) => {\n        if (!value) {\n          callback(new Error(this.$t('deploy.deploy8')));\n        } else if (value < 1 || value > 10000000) {\n          callback(new Error(this.$t('deploy.deploy81')));\n        } else {\n          callback();\n        }\n      };\n      let validatePrice = (rule, value, callback) => {\n        if (!value) {\n          callback(new Error(this.$t('deploy.deploy9')));\n        } else if (value < 1) {\n          callback(new Error(this.$t('deploy.deploy91')));\n        } else {\n          callback();\n        }\n      };\n\n      return {\n        addressInfo: '', //默认账户信息\n        defaultInfo: {},//默认链信息\n        assetsList: '',//资产列表\n        assetsInfo: {},//选中的资产信息\n        balanceInfo: {},//balance信息\n        available: 0,//可用余额\n        contractInfo: {},//合约信息\n        transferForm: {\n          fromAddress: '',\n          toAddress: '',\n          assetType: '',\n          amount: '',\n          gas: 1,\n          price: 25,\n          remarks: '',\n          fee: 0.001\n        },\n        transferRules: {\n          toAddress: [{validator: validateToAddress, trigger: ['blur']}],\n          amount: [{validator: validateAmount, trigger: ['blur']}],\n          gas: [{validator: validateGas, trigger: ['blur', 'change']}],\n          price: [{validator: validatePrice, trigger: ['blur', 'change']}],\n        },\n        seniorValue: false,//高级选项\n        toAddressInfo: {},//收款地址信息（transferType 1:NULS转账 2：token转账 3：向合约转NULS 4：向合约转token 5：跨链交易 6:NRC20跨链）\n        aliasToAddress: '',//别名地址\n        contractCallData: {},//合约信息\n        gasInfo: {number: 0, oldNumber: 0},//gas信息\n        contractFee: 0,//调用合约手续费\n        bookDialog: false,//通讯录弹框\n        bookData: [],//通讯录数据\n        transferDiolog: false,//确认弹框\n        transferLoading: false,//加载动画\n      };\n    },\n    created() {\n      this.addressInfo = addressInfo(1);\n      this.transferForm.fromAddress = this.addressInfo.address;\n      this.defaultInfo = JSON.parse(sessionStorage.getItem('info'))\n    },\n    mounted() {\n      this.getCapitalListByAddress(this.addressInfo.address);\n      setInterval(() => {\n        this.addressInfo = addressInfo(1);\n      }, 500);\n    },\n    watch: {\n      addressInfo(val, old) {\n        if (val.address !== old.address && old.address) {\n          this.transferForm.fromAddress = this.addressInfo.address;\n          this.getCapitalListByAddress(this.addressInfo.address);\n          if (this.transferForm.toAddress) {\n            this.$refs.transferForm.validateField('toAddress');\n          }\n        }\n      },\n    },\n    components: {\n      Password,\n    },\n    methods: {\n\n      /**\n       * 获取地址的资金列表\n       * @param address\n       **/\n      async getCapitalListByAddress(address) {\n        this.transferLoading = true;\n        //获取本连的基本资产\n        let basicAssets = [];\n        let chainId = MAIN_INFO.chainId; //记录主链id\n        await this.$post('/', 'getAccountLedgerList', [address])\n          .then((response) => {\n            //console.log(response.result);\n            if (response.hasOwnProperty(\"result\")) {\n              for (let item of response.result) {\n                basicAssets.push({\n                  type: 1,\n                  symbol: item.symbol,\n                  chainId: item.chainId,\n                  assetId: item.assetId,\n                  balance: timesDecimals(item.balance),\n                  decimals: item.decimals,\n                });\n                chainId = item.chainId;\n              }\n            }\n          })\n          .catch((error) => {\n            console.log(\"getAccountLedgerList:\" + error);\n            this.assetsListLoading = false;\n            /*setTimeout(() => {\n              this.getCapitalListByAddress(address)\n            }, 800);*/\n            return;\n          });\n        ///console.log(basicAssets);\n\n        //获取本连的合约资产\n        let contractAssets = [];\n        await this.$post('/', 'getAccountTokens', [1, 100, address])\n          .then((response) => {\n            //console.log(response);\n            if (response.hasOwnProperty(\"result\")) {\n              for (let itme of response.result.list) {\n                contractAssets.push({\n                  type: 2,\n                  symbol: itme.tokenSymbol,\n                  chainId: chainId,\n                  assetId: 1,\n                  status: itme.status,\n                  balance: divisionDecimals(Minus(itme.balance, itme.lockedBalance), itme.decimals),\n                  contractAddress: itme.contractAddress,\n                  decimals: itme.decimals\n                })\n              }\n            }\n          })\n          .catch((error) => {\n            console.log(\"getAccountTokens:\" + error);\n            /*setTimeout(() => {\n              this.getCapitalListByAddress(address)\n            }, 800);*/\n            return;\n          });\n\n        const newContractAssets = contractAssets.filter(obj => obj.status !== 3); //隐藏已经删除合约\n        //console.log(contractAssets);\n\n        //获取跨链的基本资产\n        let crossAssets = [];\n        await this.$post('/', 'getAccountCrossLedgerList', [address])\n          .then((response) => {\n            //console.log(response);\n            if (response.hasOwnProperty(\"result\")) {\n              for (let item of response.result) {\n                crossAssets.push({\n                  type: 1,\n                  symbol: item.symbol,\n                  chainId: item.chainId,\n                  assetId: item.assetId,\n                  balance: timesDecimals(item.balance, item.decimals),\n                  decimals: item.decimals\n                })\n              }\n            }\n          })\n          .catch((err) => {\n            console.log(\"getAccountCrossLedgerList:\" + err);\n            /*setTimeout(() => {\n              this.getCapitalListByAddress(address)\n            }, 800);*/\n            return;\n          });\n        //console.log(crossAssets);\n\n        this.assetsList = [...basicAssets, ...newContractAssets, ...crossAssets];\n        //console.log(this.assetsList);\n\n        //console.log(this.$route.query.accountType);\n        let newInfo = this.$route.query.accountType ? this.$route.query.accountType : {type: 1, tokenSymbol: MAIN_INFO};\n        if (this.$route.query.accountType === 'NULS') {\n          newInfo = {type: 1, tokenSymbol: MAIN_INFO};\n          newInfo.tokenSymbol.symbol = 'NULS';\n        }\n        if (!newInfo.contractAddress && !newInfo.tokenSymbol.symbol) {\n          newInfo.tokenSymbol.symbol = 'NULS';\n        }\n        if (newInfo.contractAddress) {\n          newInfo.symbol = newInfo.tokenSymbol;\n          newInfo.tokenSymbol = newInfo;\n        }\n        //console.log(newInfo);\n\n        for (let item of this.assetsList) {\n          //console.log(item);\n          if (item.type === 1) {\n            if (item.assetId === newInfo.tokenSymbol.assetId && item.chainId === newInfo.tokenSymbol.chainId) {\n              this.changeType(item);\n              this.transferLoading = false;\n              return\n            }\n          } else {\n            if (item.contractAddress && item.contractAddress === newInfo.contractAddress) {\n              this.changeType(item);\n              this.transferLoading = false;\n              return;\n            }\n          }\n        }\n        this.transferLoading = false;\n      },\n\n      /**\n       * 通讯录功能\n       **/\n      showBook() {\n        let defaultAddressInfo = addressInfo(1);\n        this.bookData = defaultAddressInfo.hasOwnProperty('contactList') ? defaultAddressInfo.contactList : [];\n        this.bookDialog = true;\n      },\n\n      /**\n       * 通讯录选中\n       * @param row\n       **/\n      selectBook(row) {\n        this.transferForm.toAddress = row.address;\n        this.bookDialog = false;\n        this.parameterValidation();\n      },\n\n      /**\n       * 查询账户详情根据别名\n       * @param alias\n       **/\n      async getAccountByAlias(alias) {\n        try {\n          let resData = await this.$post('/', 'getAccountByAlias', [alias]);\n          //console.log(resData);\n          if (resData.hasOwnProperty(\"result\")) {\n            this.aliasToAddress = resData.result.address;\n            this.toAddressInfo = nuls.verifyAddress(this.aliasToAddress);\n            if (this.toAddressInfo.type === 1) { //主链地址\n              await this.verifyToAddress();\n            }\n            return {success: true}\n          } else {\n            this.aliasToAddress = '';\n            return {success: false}\n          }\n        } catch (err) {\n          console.log(err);\n          return {success: false}\n        }\n      },\n\n      /**\n       * @disc: 验证to地址\n       * @params:\n       * @date: 2020-07-02 9:41\n       * @author: Wave\n       */\n      async verifyToAddress() {\n        if (this.toAddressInfo.chainId === MAIN_INFO.chainId) { // 本链交易\n          this.toAddressInfo.transferType = 1;\n          this.transferForm.fee = 0.001;\n          return {success: true}\n        } else { //跨链交易\n          this.toAddressInfo.transferType = 5;\n          this.transferForm.fee = 0.1;\n          return {success: true}\n        }\n      },\n\n      /**\n       * 资产类型选择\n       * @param type\n       **/\n      async changeType(type) {\n        //console.log(type);\n        this.assetsInfo = type;\n        this.transferForm.assetType = type.symbol;\n        this.parameterValidation();\n        if (this.transferForm.amount !== '') {\n          this.$refs.transferForm.validateField('amount');\n        }\n      },\n\n      /**\n       * @disc: 参数验证\n       * @params:\n       * @date: 2020-07-02 14:21\n       * @author: Wave\n       */\n      parameterValidation() {\n        if (this.transferForm.toAddress && this.transferForm.amount) {\n          if (this.assetsInfo.type === 1) { //主链资产\n            if (this.toAddressInfo.type === 2) { //合约地址\n              if (this.assetsInfo.chainId === MAIN_INFO.chainId && this.assetsInfo.assetId === MAIN_INFO.assetId) {\n                this.toAddressInfo.transferType = 3; //3：向合约地址转NULS\n                this.transferPayable();\n              } else {\n                this.toAddressInfo.amount = '';\n                this.$message({message: this.$t('transfer.transfer25'), type: 'error', duration: 3000});\n              }\n            }\n          } else { //合约资产\n            if (this.toAddressInfo.type === 1) { //普通地址\n              //console.log(this.transferForm);\n              let fromAddressInfo = nuls.verifyAddress(this.transferForm.fromAddress);\n              let toAddressInfo = nuls.verifyAddress(this.transferForm.toAddress);\n              //console.log(fromAddressInfo.chainId === toAddressInfo.chainId);\n              if (fromAddressInfo.chainId === toAddressInfo.chainId) {\n                this.toAddressInfo.transferType = 2; // 2：token转账\n                this.transferTransfer();\n              } else {\n                this.toAddressInfo.transferType = 6; // NRC20跨链\n                this.transferCrossChain();\n              }\n            } else { //合约地址\n              this.toAddressInfo.transferType = 4; // 4：向合约地址转token\n              this.transferTransfer();\n            }\n          }\n        }\n      },\n\n      /**\n       * @disc: 合约 transfer\n       * @params:\n       * @date: 2020-07-02 11:45\n       * @author: Wave\n       */\n      transferTransfer() {\n        this.contractInfoByContractAddress(this.assetsInfo.contractAddress, 1);\n        let gasLimit = sdk.CONTRACT_MAX_GASLIMIT;\n        let price = Number(this.transferForm.price);\n        let contractAddress = this.assetsInfo.contractAddress;\n        let methodName = 'transfer';\n        let methodDesc = '';\n        let args = [this.aliasToAddress ? this.aliasToAddress : this.transferForm.toAddress, timesDecimalsBig(this.transferForm.amount, this.assetsInfo.decimals).toString()];\n        this.validateContractCall(this.addressInfo.address, 0, gasLimit, price, contractAddress, methodName, methodDesc, args);\n      },\n\n      /**\n       * @disc: 合约 payable\n       * @params:\n       * @date: 2020-07-01 19:05\n       * @author: Wave\n       */\n      transferPayable() {\n        let gasLimit = sdk.CONTRACT_MAX_GASLIMIT;\n        let price = this.transferForm.price;\n        let contractAddress = this.aliasToAddress ? this.aliasToAddress : this.transferForm.toAddress;\n        let methodName = '_payable';\n        let methodDesc = '';\n        let args = [];\n        this.validateContractCall(this.addressInfo.address, Number(Times(this.transferForm.amount, 100000000)), gasLimit, price, contractAddress, methodName, methodDesc, args);\n      },\n\n      /**\n       * @disc: 合约 transferCrossChain (NRC20 跨链交易)\n       * @params:\n       * @date: 2020-09-14 16:36\n       * @author: Wave\n       */\n      transferCrossChain() {\n        let gasLimit = sdk.CONTRACT_MAX_GASLIMIT;\n        let price = this.transferForm.price;\n        let contractAddress = this.assetsInfo.contractAddress;\n        let methodName = 'transferCrossChain';\n        let methodDesc = '';\n        let args = [this.transferForm.toAddress,this.assetsInfo.decimals <= 9 ? Number(timesDecimals0(this.transferForm.amount, this.assetsInfo.decimals)) : timesDecimalsBig(this.transferForm.amount, this.assetsInfo.decimals)];\n        let newValue = Number(timesDecimals0(0.1, 8));\n        this.validateContractCall(this.addressInfo.address, newValue, gasLimit, price, contractAddress, methodName, methodDesc, args);\n      },\n\n      /**\n       * @disc:所有\n       * @params:\n       * @date: 2020-07-02 11:03\n       * @author: Wave\n       */\n      allAvailable() {\n        this.$refs.transferForm.validateField('amount');\n        this.transferForm.amount = this.available.toString()\n      },\n\n      /**\n       * 下一步\n       * @params: formName\n       * @date: 2020-06-29 20:17\n       * @author: Wave\n       */\n      submitTransferForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            if (this.toAddressInfo.transferType === 2) {\n              this.transferForm.fee = this.contractFee;\n            }\n            this.transferDiolog = true;\n\n          } else {\n            return false;\n          }\n        });\n      },\n\n      /**\n       * @disc: 确认提交\n       * @params:\n       * @date: 2020-06-30 14:35\n       * @author: Wave\n       */\n      async confirmTransfer() {\n        if (this.addressInfo.aesPri) {\n          this.$refs.password.showPassword(true);\n        } else {\n          this.balanceInfo = await this.getNulsBalance(this.assetsInfo.chainId, 1, this.transferForm.fromAddress);\n          //console.log(this.toAddressInfo);\n          if (this.toAddressInfo.transferType !== 1) {\n            this.$message({message: this.$t('tips.tips2'), type: 'warning', duration: 3000});\n            return;\n          }\n          let txHexKey = await getRamNumber(16);\n          let signDataKey = await getRamNumber(16);\n          let assembleHex = await this.transferAssemble();\n          //console.log(assembleHex);\n          if (!assembleHex.success) {\n            this.$message({message: this.$t('tips.tips3'), type: 'error', duration: 3000});\n            return;\n          }\n          let commitDatas = await commitData(txHexKey, signDataKey, this.addressInfo.address, assembleHex.data);\n          //console.log(commitDatas);\n          if (!commitDatas.success) {\n            this.$message({\n              message: this.$t('tips.tips4') + JSON.stringify(commitDatas.data),\n              type: 'error',\n              duration: 3000\n            });\n            return;\n          }\n          this.$refs.password.showScan(commitDatas.data.txInfo, commitDatas.data.assembleHex);\n        }\n\n      },\n\n      /**\n       * @disc: 普通转账交易组装\n       * @date: 2019-12-04 17:27\n       * @author: Wave\n       */\n      async transferAssemble() {\n        let transferInfo = {\n          fromAddress: this.transferForm.fromAddress,\n          assetsChainId: this.assetsInfo.chainId,\n          assetsId: this.assetsInfo.assetId,\n          fee: 100000\n        };\n        transferInfo['toAddress'] = this.aliasToAddress ? this.aliasToAddress : this.transferForm.toAddress;\n        transferInfo['amount'] = Number(Times(this.transferForm.amount, 100000000).toString());\n        //console.log(transferInfo);\n        let inOrOutputs = await inputsOrOutputs(transferInfo, this.balanceInfo, 2);\n        //console.log(inOrOutputs);\n        if (!inOrOutputs.success) {\n          this.$message({\n            message: this.$t('public.err1') + JSON.stringify(inOrOutputs.data),\n            type: 'error',\n            duration: 3000\n          });\n          return {success: false}\n        }\n        let tAssemble = await nuls.transactionAssemble(inOrOutputs.data.inputs, inOrOutputs.data.outputs, this.transferForm.remarks, 2);\n        return {\n          success: true,\n          data: tAssemble\n        };\n      },\n\n      /**\n       *  获取密码框的密码\n       * @param password\n       **/\n      async passSubmit(password) {\n        let passwordInfo = await passwordVerification(this.addressInfo, password);\n        if (!passwordInfo.success) {\n          this.$message({message: this.$t('address.address13'), type: 'error', duration: 3000});\n          return;\n        }\n\n        this.transferDiolog = false;\n        this.transferLoading = true;\n        this.balanceInfo = await this.getNulsBalance(this.assetsInfo.chainId, this.assetsInfo.assetId, this.transferForm.fromAddress);\n        //console.log(this.balanceInfo);\n\n        let transferInfo = {\n          fromAddress: this.transferForm.fromAddress,\n          toAddress: this.aliasToAddress ? this.aliasToAddress : this.transferForm.toAddress,\n          assetType: this.transferForm.assetType,\n          amount: Number(timesDecimals0(this.transferForm.amount, this.assetsInfo.decimals)),\n          gas: this.transferForm.gas,\n          price: this.transferForm.price,\n          remarks: this.transferForm.remarks,\n          fee: Number(timesDecimals0(this.transferForm.fee, this.defaultInfo.defaultAsset.decimals)),\n          assetsChainId: this.assetsInfo.chainId,\n          assetsId: this.assetsInfo.assetId,\n        };\n        //console.log(transferInfo);\n\n        let inOrOutputs = {};\n        let tAssemble = [];\n        let txHex = \"\";//交易签名\n        /*console.log(transferInfo);\n        console.log(this.toAddressInfo.transferType);*/\n        if (this.toAddressInfo.transferType === 1) { //1:NULS转账\n          inOrOutputs = await inputsOrOutputs(transferInfo, this.balanceInfo, 2);\n          tAssemble = await nuls.transactionAssemble(inOrOutputs.data.inputs, inOrOutputs.data.outputs, htmlEncode(this.transferForm.remarks), 2);\n        } else if (this.toAddressInfo.transferType === 2) { //2：token转账\n          transferInfo.amount = Number(Plus(0, Number(Times(this.transferForm.gas, this.transferForm.price)))).toString();\n          inOrOutputs = await inputsOrOutputs(transferInfo, this.balanceInfo, 16);\n          //console.log(this.contractCallData);\n          tAssemble = await nuls.transactionAssemble(inOrOutputs.data.inputs, inOrOutputs.data.outputs, htmlEncode(this.transferForm.remarks), 16, this.contractCallData);\n        } else if (this.toAddressInfo.transferType === 3) { //3：向合约转NULS\n          this.contractCallData.chainId = MAIN_INFO.chainId;\n          transferInfo.value = Number(transferInfo.amount);\n          transferInfo.amount = Number(Plus(transferInfo.fee, Number(Times(this.transferForm.gas, this.transferForm.price)))).toString();\n          transferInfo.amount = Number(Plus(transferInfo.amount, transferInfo.value)).toString();\n          inOrOutputs = await inputsOrOutputs(transferInfo, this.balanceInfo, 16);\n          tAssemble = await nuls.transactionAssemble(inOrOutputs.data.inputs, inOrOutputs.data.outputs, htmlEncode(this.transferForm.remarks), 16, this.contractCallData);\n        } else if (this.toAddressInfo.transferType === 4) { //4：向合约转token\n          transferInfo.amount = Number(Plus(0, Number(Times(this.transferForm.gas, this.transferForm.price)))).toString();\n          inOrOutputs = await inputsOrOutputs(transferInfo, this.balanceInfo, 16);\n          tAssemble = await nuls.transactionAssemble(inOrOutputs.data.inputs, inOrOutputs.data.outputs, htmlEncode(this.transferForm.remarks), 16, this.contractCallData);\n        } else if (this.toAddressInfo.transferType === 5) { //5：跨链交易\n          transferInfo.amount = Number(transferInfo.amount).toString();\n          transferInfo.fee = Number(transferInfo.fee);\n          let crossTxHex = await this.crossTxhexs(passwordInfo.pri, passwordInfo.pub, this.addressInfo.chainId, transferInfo);\n          //console.log(crossTxHex);\n          try {\n            let resData = await this.$post('/', 'sendCrossTx', [crossTxHex]);\n            //console.log(resData);\n            if (!resData.result.success) {\n              this.$message({message: this.$t('tips.tips14') + JSON.stringify(resData), type: 'error', duration: 3000});\n            } else {\n              this.toUrl(\"txList\");\n              this.transferLoading = false;\n            }\n          } catch (err) {\n            this.$message({message: this.$t('tips.tips14') + JSON.stringify(err), type: 'error', duration: 3000});\n          }\n          return;\n        } else if (this.toAddressInfo.transferType === 6) { //5：NRC20跨链交易\n          //参数: to(跨链地址) value(token数量, 要乘以10的n次方，n是token的精度)\n          transferInfo.amount = Number(Plus(20000000, Number(Times(this.transferForm.gas, this.transferForm.price)))).toString();\n          transferInfo.value = 10000000;\n          transferInfo.toAddress = this.assetsInfo.contractAddress;\n          //console.log(transferInfo);\n          inOrOutputs = await inputsOrOutputs(transferInfo, this.balanceInfo, 16);\n          //console.log(this.contractCallData);\n          tAssemble = await nuls.transactionAssemble(inOrOutputs.data.inputs, inOrOutputs.data.outputs, htmlEncode(this.transferForm.remarks), 16, this.contractCallData);\n        }\n        //console.log(inOrOutputs);\n        txHex = await nuls.transactionSerialize(passwordInfo.pri, passwordInfo.pub, tAssemble);\n        //console.log(txHex);\n        let broadcastResult = await validateAndBroadcast(txHex);\n        //console.log(broadcastResult);\n        if (!broadcastResult.success) {\n          this.$message({\n            message: this.$t('tips.tips14') + JSON.stringify(broadcastResult.data),\n            type: 'error',\n            duration: 3000\n          });\n          this.transferLoading = false;\n        } else {\n          this.toUrl(\"txList\");\n          this.transferLoading = false;\n        }\n      },\n\n      /**\n       * 获取转出地址余额信息\n       *  @param assetChainId\n       *  @param assetId\n       *  @param address\n       **/\n      async getNulsBalance(assetChainId, assetId, address) {\n        try {\n          let resData = await getNulsBalance(assetChainId, assetId, address);\n          //console.log(resData);\n          if (resData.success) {\n            return resData.data\n          } else {\n            return {}\n          }\n        } catch (error) {\n          console.log(error);\n          return {}\n        }\n      },\n\n      /**\n       * 合约信息根据合约地址\n       * @param contractAddress\n       **/\n      async contractInfoByContractAddress(contractAddress) {\n        return await this.$post('/', 'getContract', [contractAddress])\n          .then((response) => {\n            //console.log(response);\n            if (response.hasOwnProperty(\"result\")) {\n              return response.result;\n            } else {\n              return []\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            return []\n          })\n      },\n\n      /**\n       * 验证调用合约交易\n       * @param sender\n       * @param value\n       * @param gasLimit\n       * @param price\n       * @param contractAddress\n       * @param methodName\n       * @param methodDesc\n       * @param args\n       */\n      async validateContractCall(sender, value, gasLimit, price, contractAddress, methodName, methodDesc, args) {\n        //console.log(sender, value, gasLimit, price, contractAddress, methodName, methodDesc, args);\n        return await this.$post('/', 'validateContractCall', [sender, value, gasLimit, price, contractAddress, methodName, methodDesc, args])\n          .then((response) => {\n            //console.log(response);\n            if (response.hasOwnProperty(\"result\")) {\n              //return {success: true, data: response.result};\n              this.imputedContractCallGas(sender, value, contractAddress, methodName, methodDesc, args)\n            } else {\n              this.$message({\n                message: this.$t('call.call6') + JSON.stringify(response.error),\n                type: 'error',\n                duration: 3000\n              });\n            }\n          })\n          .catch((error) => {\n            this.$message({message: this.$t('call.call7') + error, type: 'error', duration: 3000});\n          });\n      },\n\n      /**\n       * 预估调用合约交易的gas\n       * @param sender\n       * @param value\n       * @param contractAddress\n       * @param methodName\n       * @param methodDesc\n       * @param args\n       */\n      async imputedContractCallGas(sender, value, contractAddress, methodName, methodDesc, args) {\n        return await this.$post('/', 'imputedContractCallGas', [sender, value, contractAddress, methodName, methodDesc, args])\n          .then(async (response) => {\n            //console.log(response);\n            if (response.hasOwnProperty(\"result\")) {\n              this.gasInfo.number = response.result.gasLimit;\n              this.gasInfo.oldNumber = response.result.gasLimit;\n              this.transferForm.gas = response.result.gasLimit;\n              this.transferForm.fee = Number(Plus(Number(Division(Number(Times(this.transferForm.gas, this.transferForm.price)), 10000000)), 0.001));\n              this.contractFee = this.transferForm.fee;\n              let contractConstructorArgsTypes = await this.getContractMethodArgsTypes(contractAddress, methodName);\n              if (!contractConstructorArgsTypes.success) {\n                console.log(JSON.stringify(contractConstructorArgsTypes.data));\n                return;\n              }\n              let newArgs = utils.twoDimensionalArray(args, contractConstructorArgsTypes.data);\n              this.contractCallData = {\n                chainId: MAIN_INFO.chainId,\n                sender: sender,\n                contractAddress: contractAddress,\n                value: value,\n                gasLimit: this.transferForm.gas,\n                price: this.transferForm.price,\n                methodName: methodName,\n                methodDesc: methodDesc,\n                args: newArgs\n              };\n            } else {\n              this.$message({message: this.$t('call.call4'), type: 'error', duration: 1000});\n            }\n          })\n          .catch((error) => {\n            this.$message({message: this.$t('call.call5') + error, type: 'error', duration: 1000});\n          });\n      },\n\n      /**\n       * 获取合约指定函数的参数类型\n       * @param contractAddress\n       * @param methodName\n       * @returns\n       */\n      async getContractMethodArgsTypes(contractAddress, methodName) {\n        return await this.$post('/', 'getContractMethodArgsTypes', [contractAddress, methodName])\n          .then((response) => {\n            if (response.hasOwnProperty(\"result\")) {\n              return {success: true, data: response.result};\n            } else {\n              return {success: false, data: response.error};\n            }\n          })\n          .catch((error) => {\n            return {success: false, data: error};\n          });\n      },\n\n      /**\n       *  跨链交易签名\n       * @param pri\n       * @param pub\n       * @param chainId\n       * @param transferInfo\n       **/\n      async crossTxhexs(pri, pub, chainId, transferInfo) {\n        //账户转出资产余额\n        const balanceInfo = await getNulsBalance(transferInfo.assetsChainId, transferInfo.assetsId, transferInfo.fromAddress);\n        //console.log(balanceInfo);\n        let inputs = [];\n        let outputs = [{\n          address: transferInfo.toAddress ? transferInfo.toAddress : transferInfo.fromAddress,\n          assetsChainId: transferInfo.assetsChainId,\n          assetsId: transferInfo.assetsId,\n          amount: transferInfo.amount,\n          lockTime: 0\n        }];\n        let mainNetBalanceInfo = await getNulsBalance(MAIN_INFO.chainId, MAIN_INFO.assetId, transferInfo.fromAddress);\n        //console.log(mainNetBalanceInfo);\n        let localBalanceInfo;\n        //如果不是主网需要收取NULS手续费\n        if (!isMainNet(chainId)) {\n          if (mainNetBalanceInfo.data.balance < transferInfo.fee) {\n            this.$message({message: this.$t('newConsensus.newConsensus7'), type: 'error', duration: 3000});\n            return;\n          }\n        }\n        //如果转出资产为本链主资产，则直接将手续费加到转出金额上\n        if (chainId === transferInfo.assetsChainId && transferInfo.assetsId === 1) {\n          let newAmount = Number(Plus(transferInfo.amount, transferInfo.fee));\n          //console.log(newAmount);\n          if (balanceInfo.data.balance < newAmount) {\n            this.$message({message: this.$t('newConsensus.newConsensus7'), type: 'error', duration: 3000});\n            return;\n          }\n          //转出的本链资产 = 转出资产amount + 本链手续费\n          inputs.push({\n            address: transferInfo.fromAddress,\n            assetsChainId: transferInfo.assetsChainId,\n            assetsId: transferInfo.assetsId,\n            amount: newAmount,\n            locked: 0,\n            nonce: balanceInfo.data.nonce\n          });\n          //如果不是主网需收取主网NULS手续费\n          if (!isMainNet(chainId)) {\n            inputs.push({\n              address: transferInfo.fromAddress,\n              assetsChainId: MAIN_INFO.chainId,\n              assetsId: MAIN_INFO.assetId,\n              amount: transferInfo.fee,\n              locked: 0,\n              nonce: mainNetBalanceInfo.data.nonce\n            });\n          }\n        } else {\n          localBalanceInfo = await getNulsBalance(chainId, 1, transferInfo.fromAddress);\n          //console.log(localBalanceInfo);\n          if (localBalanceInfo.data.balance < transferInfo.fee) {\n            this.$message({message: this.$t('transfer.transfer20'), type: 'error', duration: 3000});\n            return;\n          }\n          //如果转出的是NULS，则需要把NULS手续费添加到转出金额上\n          if (transferInfo.assetsChainId === MAIN_INFO.chainId && transferInfo.assetsId === 1) {\n            let newAmount = transferInfo.amount + transferInfo.fee;\n            if (mainNetBalanceInfo.data.balance < newAmount) {\n              this.$message({message: this.$t('newConsensus.newConsensus7'), type: 'error', duration: 3000});\n              return;\n            }\n            inputs.push({\n              address: transferInfo.fromAddress,\n              assetsChainId: transferInfo.assetsChainId,\n              assetsId: transferInfo.assetsId,\n              amount: newAmount,\n              locked: 0,\n              nonce: mainNetBalanceInfo.data.nonce\n            });\n          } else {\n            inputs.push({\n              address: transferInfo.fromAddress,\n              assetsChainId: transferInfo.assetsChainId,\n              assetsId: transferInfo.assetsId,\n              amount: transferInfo.amount,\n              locked: 0,\n              nonce: balanceInfo.data.nonce\n            });\n            inputs.push({\n              address: transferInfo.fromAddress,\n              assetsChainId: MAIN_INFO.chainId,\n              assetsId: MAIN_INFO.assetId,\n              amount: transferInfo.fee,\n              locked: 0,\n              nonce: mainNetBalanceInfo.data.nonce\n            });\n          }\n          //本链主资产手续费\n          if (!isMainNet(chainId)) {\n            inputs.push({\n              address: transferInfo.fromAddress,\n              assetsChainId: chainId,\n              assetsId: 1,\n              amount: transferInfo.fee,\n              locked: 0,\n              nonce: localBalanceInfo.data.nonce\n            });\n          }\n        }\n        //console.log(inputs);\n        //console.log(outputs);\n\n        let tAssemble = await nuls.transactionAssemble(inputs, outputs, transferInfo.remark, 10);//交易组装\n        let ctxSign = \"\";//本链协议交易签名\n        let mainCtxSign = \"\";//主网协议交易签名\n        const txs = require('nuls-sdk-js/lib/model/txs');\n        const Serializers = require(\"nuls-sdk-js/lib/api/serializers\");\n        let bw = new Serializers();\n        let mainCtx = new txs.CrossChainTransaction();\n        let pubHex = Buffer.from(pub, 'hex');\n        let newFee = 0;\n        //console.log(isMainNet(chainId));\n        if (isMainNet(chainId)) {\n          await countCtxFee(tAssemble, 1).then((result) => {\n            ///console.log(result);\n            newFee = result;\n          }).catch((err) => {\n            this.$message({message: this.$t('newConsensus.newConsensus7'), type: 'error', duration: 3000});\n            console.log(err);\n            return;\n          });\n        } else {\n          await countCtxFee(tAssemble, 2).then((result) => {\n            newFee = result;\n          }).catch((err) => {\n            this.$message({message: this.$t('newConsensus.newConsensus7'), type: 'error', duration: 3000});\n            console.log(err);\n            return;\n          });\n          mainCtx.time = tAssemble.time;\n          mainCtx.remark = tAssemble.remark;\n          let mainNetInputs = [];\n          //console.log(transferInfo);\n          if (transferInfo.assetsChainId === MAIN_INFO.chainId && transferInfo.assetsId === 1) {\n            mainNetInputs.push({\n              address: transferInfo.fromAddress,\n              assetsChainId: transferInfo.assetsChainId,\n              assetsId: transferInfo.assetsId,\n              amount: transferInfo.amount + newFee,\n              locked: 0,\n              nonce: mainNetBalanceInfo.data.nonce\n            });\n          } else {\n            mainNetInputs = [{\n              address: transferInfo.fromAddress,\n              assetsChainId: transferInfo.assetsChainId,\n              assetsId: transferInfo.assetsId,\n              amount: transferInfo.amount,\n              locked: 0,\n              nonce: balanceInfo.data.nonce\n            }, {\n              address: transferInfo.fromAddress,\n              assetsChainId: MAIN_INFO.chainId,\n              assetsId: MAIN_INFO.assetId,\n              amount: newFee,\n              locked: 0,\n              nonce: mainNetBalanceInfo.data.nonce\n            }];\n          }\n          mainCtx.setCoinData(mainNetInputs, outputs);\n        }\n        //console.log(transferInfo.fee !== newFee);\n        //如果手续费发生改变，重新组装CoinData\n        if (transferInfo.fee !== newFee) {\n          //console.log(transferInfo);\n          //console.log(chainId === transferInfo.assetsChainId && transferInfo.assetsId === 1);\n          if (chainId === transferInfo.assetsChainId && transferInfo.assetsId === 1) {\n            if (balanceInfo.data.balance < Number(Plus(transferInfo.amount, newFee))) {\n              this.$message({message: this.$t('newConsensus.newConsensus7'), type: 'error', duration: 3000});\n              return;\n            }\n            inputs[0].amount = Number(Plus(transferInfo.amount, newFee));\n            if (!isMainNet(chainId)) {\n              inputs[1].amount = newFee;\n            }\n          } else {\n            //console.log(localBalanceInfo.data.balance < transferInfo.fee);\n            if (localBalanceInfo.data.balance < transferInfo.fee) {\n              this.$message({message: this.$t('transfer.transfer20'), type: 'error', duration: 3000});\n              return;\n            }\n            //console.log(transferInfo.assetsChainId === MAIN_INFO.chainId && transferInfo.assetsId === 1);\n            if (transferInfo.assetsChainId === MAIN_INFO.chainId && transferInfo.assetsId === 1) {\n              if (mainNetBalanceInfo.data.balance < Number(Plus(transferInfo.amount, newFee))) {\n                this.$message({message: this.$t('newConsensus.newConsensus7'), type: 'error', duration: 3000});\n                return;\n              }\n              inputs[0].amount = Number(Plus(transferInfo.amount, newFee));\n              inputs[1].amount = newFee;\n            } else {\n              //console.log(inputs);\n              inputs[0].amount = Number(transferInfo.amount);\n              inputs[1].amount = newFee;\n            }\n          }\n          //console.log(inputs);\n          //console.log(outputs);\n          tAssemble = await nuls.transactionAssemble(inputs, outputs, transferInfo.remark, 10);\n          ctxSign = nuls.transactionSignature(pri, tAssemble);\n        } else {\n          ctxSign = nuls.transactionSignature(pri, tAssemble);\n        }\n        bw.writeBytesWithLength(pubHex);\n        bw.writeBytesWithLength(ctxSign);\n        if (!isMainNet(chainId)) {\n          // mainCtx.txData = tAssemble.getHash();\n          //console.log(mainCtx);\n          mainCtxSign = nuls.transactionSignature(pri, mainCtx);\n          bw.writeBytesWithLength(pubHex);\n          bw.writeBytesWithLength(mainCtxSign);\n        }\n        tAssemble.signatures = bw.getBufWriter().toBuffer();\n        //console.log(tAssemble.txSerialize().toString('hex'));\n        return tAssemble.txSerialize().toString('hex');\n      },\n\n      /**\n       * 连接跳转\n       * @param name\n       */\n      toUrl(name) {\n        //console.log(name)\n        this.$router.push({\n          name: name\n        })\n      },\n\n    }\n  }\n</script>\n\n<style lang=\"less\">\n  @import \"./../../assets/css/style\";\n\n  .transfer {\n    .title {\n      line-height: 80px;\n      height: 100px;\n    }\n    .transfer_info {\n      min-height: 600px;\n      border: 1px solid #c1c1c1;\n      background-color: #ffffff;\n      margin: -20px auto 0;\n      .transfer_form {\n        margin: 40px auto 0;\n        .el-form-item {\n          margin: 0 0 20px 0;\n          .el-form-item__label {\n            line-height: 20px;\n          }\n          .el-form-item__content {\n            line-height: 30px;\n            .el-input {\n              .el-input__suffix {\n                .el-input__icon {\n                  line-height: 30px;\n                }\n              }\n            }\n\n            .el-form-item__error {\n              font-size: 10px;\n              padding: 1px 0 0 0;\n            }\n            .asset_type {\n              width: 630px;\n              .el-input {\n                .el-input__inner {\n                  width: 100%;\n                }\n              }\n            }\n            .el-button--success {\n              width: 300px;\n            }\n          }\n        }\n        .book {\n          width: 20px;\n          height: 20px;\n          z-index: 88;\n          margin: 23px -23px 0 0;\n        }\n        .remarks {\n          .el-form-item__label {\n            line-height: 18px;\n          }\n        }\n        .balance {\n          margin: 5px 0 0 0;\n        }\n        .all {\n          margin: -45px -26px 0 0;\n          line-height: 20px;\n          z-index: 88;\n          position: relative;\n          font-size: 10px;\n        }\n        .senior_value {\n          height: 20px;\n          margin: -10px 0 0 0;\n          .el-switch__label {\n            font-size: 12px;\n          }\n          .el-switch__core {\n            width: 30px;\n            height: 18px;\n            &:after {\n              height: 14px;\n            }\n          }\n        }\n        .senior_list {\n        }\n      }\n    }\n\n    .confirm-dialog {\n      .remark {\n        label {\n          display: block;\n          width: 490px !important;\n          float: right;\n          height: 40px;\n          overflow-y: auto;\n          line-height: 20px;\n          font-size: 12px;\n        }\n      }\n    }\n  }\n\n</style>\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","'use strict';\n\nfunction valueOfstring(obj) {\n  return obj === null ? null : obj.toString();\n}\n\nfunction isBlank(str) {\n  return null === str || str.trim().length === 0;\n}\n\nmodule.exports = {\n  stringToByte: function stringToByte(str) {\n    var bytes = [];\n    var len = void 0,\n        c = void 0;\n    len = str.length;\n    for (var i = 0; i < len; i++) {\n      c = str.charCodeAt(i);\n      if (c >= 0x010000 && c <= 0x10FFFF) {\n        bytes.push(c >> 18 & 0x07 | 0xF0);\n        bytes.push(c >> 12 & 0x3F | 0x80);\n        bytes.push(c >> 6 & 0x3F | 0x80);\n        bytes.push(c & 0x3F | 0x80);\n      } else if (c >= 0x000800 && c <= 0x00FFFF) {\n        bytes.push(c >> 12 & 0x0F | 0xE0);\n        bytes.push(c >> 6 & 0x3F | 0x80);\n        bytes.push(c & 0x3F | 0x80);\n      } else if (c >= 0x000080 && c <= 0x0007FF) {\n        bytes.push(c >> 6 & 0x1F | 0xC0);\n        bytes.push(c & 0x3F | 0x80);\n      } else {\n        bytes.push(c & 0xFF);\n      }\n    }\n    return bytes;\n  },\n\n\n  twoDimensionalArray: function twoDimensionalArray(args, types) {\n    if (args.length === 0) {\n      return null;\n    } else if (args.length !== types.length) {\n      throw \"args number error\";\n    } else {\n      var length = args.length;\n      var two = new Array(length);\n      var arg = void 0;\n      for (var i = 0; i < length; i++) {\n        arg = args[i];\n        if (arg == null) {\n          two[i] = [];\n          continue;\n        }\n        if (typeof arg === 'string') {\n          var argStr = arg;\n          // 非String类型参数，若传参是空字符串，则赋值为空一维数组，避免数字类型转化异常 -> 空字符串转化为数字\n          if (types != null && isBlank(argStr) && 'String' !== types[i]) {\n            two[i] = [];\n          } else if (types != null && !isBlank(argStr) && types[i].indexOf('[]') >= 0) {\n            var arrayArg = eval(argStr);\n            if (Array.isArray(arrayArg)) {\n              var len = arrayArg.length;\n              var result = new Array(len);\n              for (var k = 0; k < len; k++) {\n                result[k] = valueOfstring(arrayArg[k]);\n              }\n              two[i] = result;\n            } else {\n              throw \"array arg error\";\n            }\n          } else {\n            two[i] = [argStr];\n          }\n        } else if (Array.isArray(arg)) {\n          var _len = arg.length;\n          var _result = new Array(_len);\n          for (var _k = 0; _k < _len; _k++) {\n            _result[_k] = valueOfstring(arg[_k]);\n          }\n          two[i] = _result;\n        } else {\n          two[i] = [valueOfstring(arg)];\n        }\n      }\n      return two;\n    }\n  }\n};"],"sourceRoot":""}